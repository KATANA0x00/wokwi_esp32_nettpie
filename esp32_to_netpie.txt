#include <WiFi.h>
#include <PubSubClient.h>
#include "DHT.h"

#define DHTTYPE DHT22
#define DHTPIN 26
#define LED_PIN 23

const char* ssid = "Wokwi-GUEST";
const char* password = "";
const char* mqttServer = "broker.netpie.io";
const int mqttPort = 1883;
const char* mqttClientID = "68f780e7-dcd2-420b-84bf-a32408bf9314";
const char* mqttUsername = "ccxWXNZ47jwjYCgmLSTR599xcXBrkJzC";
const char* mqttPassword = "ohb1pQFuSoaBxkSv4jgsEgj6Kcyo4m9z";

DHT dht(DHTPIN, DHTTYPE);
WiFiClient espClient;
PubSubClient client(espClient);

char payload[64];

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);

  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi!");

  client.setServer(mqttServer, mqttPort);
  client.setCallback(callback);

  connectMQTT();
  dht.begin();
}

void connectMQTT() {
  while (!client.connected()) {
    Serial.print("Connecting to MQTT...");
    if (client.connect(mqttClientID, mqttUsername, mqttPassword)) {
      Serial.println("connected");
      client.subscribe("@msg/operator");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}


void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived on topic: ");
  Serial.print(topic);
  Serial.print(". Message: ");
  String message;
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
    message += (char)payload[i];
  }
  Serial.println();
  if (message == "on") {
    digitalWrite(LED_PIN, HIGH);
    Serial.println("LED turned ON");
  } else if (message == "off") {
    digitalWrite(LED_PIN, LOW);
    Serial.println("LED turned OFF");
  }
}

void loop() {
  if (!client.connected()) {
    connectMQTT();
  }
  client.loop();

  float t = dht.readTemperature();
  float h = dht.readHumidity();
  sprintf(payload, "{\"data\":{\"temperature\":%.2f, \"humidity\":%.2f}}", t, h);
  Serial.print("Publishing message: ");
  Serial.println(payload);
  client.publish("@shadow/data/update", payload);
  delay(2000);
}
